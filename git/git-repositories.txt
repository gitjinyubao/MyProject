使用密钥匙的clone:
建立仓库->远程仓库：
1.配置本地git用户信息:
        配置用户信息：每次提交的时候用来说明是谁提交了；配置信息可以修改不影响原来项目的提交；唯一改变的就是提交人信息改变
	git config --global user.name "jinyubaodebaobei"
	git config --global user.email "2045279403@qq.com"
	初始化一次即可；检验是否初始化成功：git config --list
        
2.初始化本地git:
	git init

3.生成密钥匙并添加到git仓库
	创建一个 SSH key：
		ssh-keygen -t rsa -C "your_email@example.com"
        添加你的 SSH key 到 github上面去：
        	a、首先你需要拷贝 id_rsa.pub 文件的内容，你可以用编辑器打开文件复制，也可以用git命令复制该文件的内容，如：
			$ clip < ~/.ssh/id_rsa.pub
		b、登录你的github账号，从又上角图像箭头处选择settings进入-->>SSH and GPG keys,进入页面添加 SSH key。
		c、点击 Add SSH key 按钮添加一个 SSH key 。把你复制的 SSH key 代码粘贴到 key 所对应的输入框中，
			记得 SSH key 代码的前后不要留有空格或者回车。
   			当然，上面的 Title 所对应的输入框你也可以输入一个该 SSH key 显示在 github 上的一个别名。默认的会使用你的邮件名称。

测试一下该SSH key
	ssh -T git@github.com

	当你输入以上代码时，会有一段警告代码，如：

	The authenticity of host 'github.com (207.97.227.239)' can't be established.
	# RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
	# Are you sure you want to continue connecting (yes/no)?
	这是正常的，你输入 yes 回车既可。如果你创建 SSH key 的时候设置了密码，接下来就会提示你输入密码，如：

	Enter passphrase for key '/c/Users/Administrator/.ssh/id_rsa':
	当然如果你密码输错了，会再要求你输入，知道对了为止。

	注意：输入密码时如果输错一个字就会不正确，使用删除键是无法更正的。

	密码正确后你会看到下面这段话，如：

	Hi username! You've successfully authenticated, but GitHub does not
	# provide shell access.
	如果用户名是正确的,你已经成功设置SSH密钥。如果你看到 “access denied” ，者表示拒绝访问，那么你就需要使用 https 去访问，而不是 SSH 。

接下来就可以使用git clone了.

两种clone的区别：
	1.HTTPS:速度快（SSH两倍），不需要密钥匙
          经过一二步之后就可以直接使用git clone克隆：eg：git clone https://github.com/jinyubaodebaobei/learngit.git
          常见报错：
		在使用git clone从远程仓库里面项目clone到本地时，报错：fatal:I don’t handle protocol ‘https’
          解决方案：
          	将clone的那句话，例如$ git clone https://git.coding.net/Sugar/pro.git里面https的空格都删掉，再用空格键补全，然后回车就可以了。
        2.SSH:速度慢，需要密钥匙
        	需要执行上面三步： eg：git clone git@github.com:jinyubaodebaobei/learngit.git

git push 常见错误：
	1. The reqquest URL returned error : 403 Forbidden while accessing
        	原因：私有项目,没有权限,输入用户名和密码，或者远程地址采用这种方式
                	1.本地采用这种方式：（修改.git/config）
                        vi .git/config
                        # 将
                        [ remote "origin"]
                        	url = https://github.com/用户名/仓库名.git
                        修改为：
                        [ remote "origin"]
                        	url = https://用户名:密码@github.com/用户名/仓库名.git	

                        <<<此种方法就是设置权限，这样不是任何人都可以push的（可以防止别人clone到本地然后）

HTTPS和SSH：
	在本地计算机与GitHub（或GitLab）进行通信时，传输主要基于两种协议，HTTPS和SSH，对应的仓库地址就是HTTPS URLs和SSH URLs。

	首先需要强调的是，HTTPS URLs和SSH URLs对应的是两套完全独立的权限校验方式，主要的区别就是HTTPS URLs采用账号密码进行校验，
	SSH URLs采用SSH秘钥对进行校验。平时使用的时候我们可以根据实际情况，选择一种即可。HTTPS URLsGitHub官方推荐采用HTTPS URLs的方式，
	因为该种方式适用面更广（即使在有防火墙或代理的情况下也同样适用），使用更方便（配置更简单）。采用HTTPS URLs地址clone/fetch/pull/push仓库时，
	事先无需对本地系统进行任何配置，只需要输入GitHub的账号和密码即可。不过如果每次都要手动输入账号密码，也是一件很繁琐的事。

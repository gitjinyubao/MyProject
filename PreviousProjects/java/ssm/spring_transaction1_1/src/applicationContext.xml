<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<context:component-scan base-package="com.demo"></context:component-scan>
	<!-- <context:property-placeholder   location="classpath:mysql.properties"></context:property-placeholder> -->
	
	<!-- <bean   id="dataSource"   class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<property name="driverClassName"    value="${jdbc.driver}"></property>
	<property name="url"    value="${jdbc.url}"></property>
	<property name="username"   value="${jdbc.username}"></property>
	<property name="password"   value="${jdbc.password}"></property>
	</bean>
	
	将数据源对象注入到sqlSessionFactoryBean对象中
    <bean  id="sqlSessionFactory"   class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource"   ref="dataSource"></property>
    </bean>
	
	将sqlSessionFactory对象注入UserinfoMapper.java接口的代理实现类中，这就需要告诉spring  (orm映射)这些映射接口在什么位置
    <bean   class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage"   value="com.mapper"></property>
    <property name="sqlSessionFactory"  ref="sqlSessionFactory"></property>
    </bean>
    
    将dataSource对象关联到事物的功能 配置声明式的事务管理（采用基于注解的方式）
      为了使用基于@Transactional的事务管理(回滚)，需要在Spring中进行如下的配置
    <bean   id="transactionManager"    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource"   ref="dataSource"></property>
    </bean>
	 -->
	
	  <!-- 创建数据源dataSource对象 -->
    <bean   id="dataSource"    class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName"  value="com.mysql.jdbc.Driver"></property>
	<property name="url" value="jdbc:mysql://localhost:3306/project5"></property>
	<property name="username" value="root"></property>
	<property name="password" value="1934jy26"></property>
    </bean>

    <!-- 将数据源对象注入到sqlSessionFactoryBean对象中 -->
    <bean  id="sqlSessionFactory"   class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource"   ref="dataSource"></property>
    </bean>
    
    
    <!-- 将sqlSessionFactory对象注入UserinfoMapper.java接口的代理实现类中，这就需要告诉spring  (orm映射)这些映射接口在什么位置 -->
    <bean   class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage"   value="com.demo.ThingMapper"></property>
    <property name="sqlSessionFactory"  ref="sqlSessionFactory"></property>
    </bean>
    
    <!-- 将dataSource对象关联到事物的功能 --> <!-- 配置声明式的事务管理（采用基于注解的方式） -->
      <!-- 为了使用基于@Transactional的事务管理(回滚)，需要在Spring中进行如下的配置 -->
    <bean   id="transactionManager"    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource"   ref="dataSource"></property>
    </bean>
  
	
	


</beans>
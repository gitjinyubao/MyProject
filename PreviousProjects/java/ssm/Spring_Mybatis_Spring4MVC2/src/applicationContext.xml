<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
     
   <!-- 加入包扫描，将dao和service包中的内容进行注入，注入的方式是通过注解。扫描Dao层(数据访问层)和service(业务层)的注解，然后注入 -->
   <context:component-scan base-package="ssm.dao"></context:component-scan>
   <context:component-scan base-package="ssm.service"></context:component-scan>
    
    
     <!-- 创建数据源dataSource对象 -->
    <bean   id="dataSource"    class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName"  value="com.mysql.jdbc.Driver"></property>
	<property name="url" value="jdbc:mysql://localhost:3306/project5"></property>
	<property name="username" value="root"></property>
	<property name="password" value="1934jy26"></property>
    </bean>

    <!-- 将数据源对象注入到sqlSessionFactoryBean对象中 -->
    <bean  id="sqlSessionFactory"   class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource"   ref="dataSource"></property>
    </bean>
    
    
    <!-- 将sqlSessionFactory对象注入UserinfoMapper.java接口的代理实现类中，这就需要告诉spring  (orm映射)这些映射接口在什么位置 -->
    <bean   class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage"   value="ssm.orm"></property>
    <property name="sqlSessionFactory"  ref="sqlSessionFactory"></property>
    </bean>
    
    <!-- 将dataSource对象关联到事物的功能 --> <!-- 配置声明式的事务管理（采用基于注解的方式） -->
      <!-- 为了使用基于@Transactional的事务管理(回滚)，需要在Spring中进行如下的配置 -->
    <bean   id="transactionManager"    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource"   ref="dataSource"></property>
    </bean>
    
    <!-- 声明使用注解式事务 -->  
    <tx:annotation-driven   transaction-manager="transactionManager"/>

</beans>
<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
   
<mapper namespace="com.dao.CommandDao">  
<resultMap type="command" id="commandMap">
<result property="id" column="C_ID"/>
<result property="name" column="name"/>
<result property="description" column="description"/>
<collection property="list" resultMap="com.dao.CommandContentDao.commandContentMap" />
</resultMap>

<!--使用<sql>标签进行引用  -->
<sql id="columns">id,name,description</sql>

<select id="selectCommandById" parameterType="int" resultType="command">
	select name command from command where id=#{_paremeter}
</select>

<select id="a"  resultType="command">
	select <include refid="columns" /> from command 
</select>

<!--<set>标签常用于update语句  ,自动增加或者减少','-->

<!--<trim>标签：可以代表其他的任何标签
	eg:表示where标签
	    <trim prefix="where" suffixOveride="and/or">
	    </trim>
	         表示set标签
	   	<trim prefix="set" suffixOverride=",">
	   	</trim>
	      -->
	     
<!--<choose>标签(只要有一个条件满足，就结束其他标签的遍历)
    Eg:
       <choose>
       	<when test="">
       	</when>
       	<when test="">
       	</when>
       	<when test="">
       	</when>
       	<otherwise>其他条件不成立时的默认条件</otherwise>
       </choose>
    
    -->

<!--查询-->
<select id="queryCommandList" parameterType="command" resultMap="commandMap">
    <!--当有两个ID时,对其中一个ID使用别名  -->
	select a.id C_ID,a.name,a.description,b.id,b.content,b.command_id from command a left join command_content b
	on a.id=b.command_id 
	<!-- 拥有where关键字,就算条件都不满足，也不会出现where(使用where标签称为无条件检索) -->
	<where>
	<if test="null!=name and !&quot;&quot;.equals(name.trim())">
		and a.name like '%' #{name} '%'
	</if>
	<if test="null!=description and !&quot;&quot;.equals(description).trim()">
		and a.description like '%' #{description} '%'
	</if>
	</where>
</select>

</mapper>  